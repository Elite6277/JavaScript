'use strict';

// Макро и микро задачи

// Понятия котрые нужно знать в работе JavaSript разработчика  в том числе и для прохождения собеседований

// Каждая задача которая попадает в Calback queue это макро задача  а осередь это соответственно очередь макро задач

// Есть и второй термин это микро задачи 
// Пример который можем встретить на собеседованиях 

setTimeout(() => console.log('timeout'));

Promise.resolve()
   .then(() => console.log('promise'));

queueMicrotask(() => console.log('wow'));

Promise.resolve()
   .then(() => console.log('promise'));

console.log('code');

// Выдедится code promise timeout

// Дело в том что сразу после каждой макро задачи будто это ассинхронный или синхронный код движок исполняет все задачи из очереди микро задач перед тем как выполнить следующую макро задачу

// На самом деле у нас формируется не только очередь из макро задач но и очередь из микро задач

// Микро задачи это те которые  у нас формируются внутри  then, catch, finally  либо  при помощи опреатора await   и вот эти микро задачи скапливаются и как только у нас завершается одна макро задача выполняется тогда выполняются все микро задачи которые там скопились в очереди, они все выполнились и после этого  идет следующая макро задача

// macrotask:() => {}
// microtasks: then/catch/finally /await
// render
// () => {}
// microtasks: then/catch/finally /await
// render
// () => {}


// Стоит знать еще и о возможности самому запускать микро задачи  тоесть код который выполнится после макро задач но до рендеринга страницы делается это при помощи команды queueMicrotask()