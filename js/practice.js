'use strict';

//JSON формат передачи данных, глубокое клонирование объектов.

// Соверменный формат передачи данных
// JSON - JavaScript Object Notation
// JSON - Текстовый формат обмена данных он используется не только для передачи но и для хранения данных

// Изначалаьно данный формат данных появился в JS но сейчас он может использовать практически любым языком-программирования

// JSON это всего лишь набор пар ключ значение как и в объекте  и главным правилом будет то что все строки должны быть обязательно в двойных ковычках
// В качестве значений могут быть объекты массивы числа строки логические значения или null, так что как итог мы можем получить небольшую не реляционную базу данных

// Этот объект нам нужно отправить на сервер на бэкенд ,Напрямую мы объект отправить на не можем сервер и протоколы передачи данных нас просто не поймут, поэтому нам надо его превратить в один из вариантов который можно  транспортировавть 
// 
const persone = {
   name: 'Alex',
   tel: '+7444',
   parents: {
      mom: 'Olga',
      dad: 'Mike',
   }
};

// Делаем глубокую копию этого объекта

// Будет создан глубокий колн который совершенно  не зависит от первоначального объекта
const clone = JSON.parse(JSON.stringify(persone));

clone.parents.mom = 'ANN';
console.log(persone);
console.log(clone);

// Готовим файл для отправки
// Самое главное правило в JSONE чтобы все наши сущности были щаписаны в двойные ковычки
console.log(JSON.stringify(persone));

// Когда нам с сервера приходит JSON и нам необходимо превратить его в обычный объект  в нашем скрипте и уже как то использовать

// Для этого уже есть второй метод который наз-ся parse

console.log(JSON.parse(JSON.stringify(persone)));