"use strict"
// Гетттеры и сеттеры (свойства объектов)

// Объекты состоят из свойств и методов
// Свойства это то что описывает наш объект  тоесть какие то харктеристики какие то данные
// Методы это  то что умеет делать наш объект

// Но свойство у оюъекта делятся еще на две категории это свойсто данные и свойства акцессоры
// Все свойства которые мы использовали до этого были свойствами данными тоесть они просто описывали наш объект
// А второй тип свойтв акцессоры - это целый комплекс который позволяет нам как присваивать так и получать значения но при этом во внешнем коде они будут выгдлядеть как самые обычные свойства объекта

// Рассматриваем мы их только сейчас по двум причинам во первых до этого мы еще не были знакомы с таким понятием как this контекст вызова во вторых нам еще просто негде было их применять

// Свойства акцессоры деляться на две группы это геттеры и сеттеры

// Как понятно из названия геттеры позволяют нам получить какое то значение свойтства а сеттеры непосредственно устанавливать 

const persone = {
   name: "Alex",
   age: 25,

   // создаем геттеры
   get userAge() {
      // Теперь когда мы снаружи будем вызывать user.age мы будем получать текущий возраст нашего персонажа 
      //get  нам необходим чтобы получать это значения  
      return this.age;
   },
   // В пару к get мы можем сооздавать и set 
   //set  нам необходим чтобы устанавливать значения
   set userAge(num) {
      this.age = num;
   }
};

// Когда мы используем геттер мы уже не используем круглые скобки userAge() геттер предпологает что внутри у нас и так какой то функционал  и он нам просто позволяет работать с этим методом как с обычным свойством  именоо поэтому это наз-ся свойство акцессоров
console.log(persone.userAge = 30)
console.log(persone.userAge)