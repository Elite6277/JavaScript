"use strict"

// Получение данных с сервера. AsyncAwait(ES8)

//1 Благодаря клиент серверному взаимодействию Построим элементы на странице
//2 Познакомимся  с операторами AsyncAwait которые появились в стандарте es8
// 3 И немного улучшим поведение отправки данных с форм на наш сервер

//function Expression  это функция которая создается прямо в потоке кода и выглаядит как присваивание в обычную переменнную

//Самое главное это взять все наши формы и под кажду из них подвязать postData подвязать
//Сейчас на каждую форму будет подвязана функция postData который будет обработчиком события при отправке
//Создаем функцию function Expression
//когда мы делаем запрос мы сразу можем обработать те данные которые пришли
// создаем переменнную result  во внутрь нее мы  с вами будем помешать промис который возврашается от fetch

//Нам нужен механизм который превращяет ассинхронный код в синхронный для решения этой проблемы  появились такие операторы как Assync Await эти опреторы всегда используются в паре
//1 аssync ставится перед функцией  таким образом мы говорим что внутри функции у нас будет какой то ассинхронный код  а дальше нам нужно использовать его парный оператор await при чем мы их  ставим перед теми операциями которые нам необходимо дождаться

//await значит что неоьходимо дождаться результата этого запроса какой результат нас не волнует лишь бы не undefined самое главное что мы должны его дождаться и толкьо после того как у нас будет результат await пропустит нас дальше

//Когда вы предпологаете что у вас будут какие то timeout какие то работы с серевром мы должны всегда продумывать как у нас будет идти код

// Метод entries возвращяет массив собственных перечисляемых свойтств у указанного объекта тоесть массив в массиве

//Есть обратный метод который наз-ся fromEntries()

//вот из этого и состоит современнный frontEnd вы но только должны уметь прописывать какой то функционал на странице  калькуляторы слайдеры мы это еще будем с вами делать но самое главное уметь настраивать связь между клиентом и сервером 