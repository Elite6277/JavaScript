'use strict';

// Функции генераторы
// С этим понятием вы скорее всего столкнетесь уже в более  продвинутых технологиях поэтому чтобы не пугаться такого термина разберем эту разновидность функции уже сейчас
// Это когда функция генерирует нам какой то результат и делает это она последовательно

//Для того чтобы создать функцию генератор нам необходимо прописать ключевое слово function* и зведочка 

//Создаем функцию генератор 
function* generator() {
   yield 'S';
   yield 'c';
   yield 'r';
   yield 'i';
   yield 'p';
   yield 't';
}


const str = generator();

console.log(str.next());
console.log(str.next());
console.log(str.next());
console.log(str.next());
console.log(str.next());
console.log(str.next());
console.log(str.next().value);
// Чтобы использовать следующий шаг нашего генератора необходимо исользовать уже всроенный метод который называется next 


//такие функции  нам выдают какой то результат последовательно, тоесть мы один раз вызвали функцию она дала нам один результат когда мы вызываем ее в следующий раз в таком случаем нам выдается уже какой то другой результат  и за этот функционал отвечает ключевое слово yield

function* count(n) {
   for (let i = 0; i < n; i++) {
      yield i;
   }
}

const counter = count(7);
console.log(counter.next().value);

for (let k of count(7)) {
   console.log(k);
}