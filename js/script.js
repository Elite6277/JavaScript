"use strict";

// Динамическая типизация в JS

// Динамическая типизация это возможность одного типа данных превращаться в другой
// Число может стать строкой строка числом а объект в boolean значение

// В других языках есть и статическая типизация когда число всегда остается числом


// To String превращаем что то в строку

// 1) вариант номер один самый старый и очень редко испоьзуемый способ

console.log(typeof (String(null)));// Превратили null в строку
console.log(typeof (String(4)));// Превратили 4 в строку

//2 Конкатинация 
console.log(typeof (5 + ''));// Конкатонация это сложение строки с чем-то 
// При сложении со строкой у нас всеравно получается строка

const num = 5;

console.log("https://vk.com/catalog/" + num);

const fonstSize = 26 + 'px';
console.log(fonstSize);

// To Number  Что угодно превратить в число

// 1) Number
console.log(typeof (Number('4')));// Превратили 4 в число

// 2) Унарный плюс Это знак плюса который ставять перед каким-то типом данных  для превращения в число

console.log(typeof (+ '5'));// Превратили 5 в число

// 3) Методы которые существуют у чисел
console.log(typeof (parseInt('15', 10)));// первый аргумент то что нужно превратить в int второй аргумент система исчисления 

let answ = +prompt('Hello', '');

// От пользователя всегда приходит строка

// To boolean

// Пустота или нечего всегда будет ложью

// В JavaSctipte  есть условные разделения на логические типы

// Всегда будет превращаться в false

// 0, '', null, undefined, NaN;

let switcher = null;

if (switcher) {
   console.log('Working...')
}

switcher = 1;

if (switcher) {
   console.log('Working...')
}

// 2) boolean это логический тип данных
console.log(typeof (Boolean('4')));

// 3) !! Два знака отрицания  превращает в boolean
console.log(typeof (!!"44444"));