"use strict";

// Call back функции которые используются в неочевидных местах и конструкция
// Используется очень активно

function first() {
   // Do something
   setTimeout(function () {
      console.log(1);

   }, 500);
}

function second() {
   console.log(2);
}

first();
second();

//Главное правило если функции идут одна за другой это не значит что они выполняются так же
//они запускаются одна за другой но могут выполнится в разное время

//Сall back это функция которая должна быть выполнена после того как другая фнкция завершит своё выполнение

function learnJS(lang, callback) {
   // Это главный шаблон callback функций
   // То что в другую функцию в качестве аргумента , в будущем мы можем  передать другую функцию
   console.log(`Я учу: ${lang}`);
   callback();
}

learnJS('JavaScript', function () {//Первый раз когда встречаемся с анонимной функцией
   console.log('Я прошел этот урок!')
});

// Второй вариант
function learnJS(lang, callback) {
   // Это главный шаблон callback функций
   // То что в другую функцию в качестве аргумента , в будущем мы можем  передать другую функцию
   console.log(`Я учу: ${lang}`);
   callback();
}

function done() {
   console.log('Я прошел этот урок!');
}

learnJS('JavaScript', done);

// Итог callbackи позволяют нам быть уверенным в том что определенный код не начнет свое исполнение до того момента пока другой код не завершит свое исполнение