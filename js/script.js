"use strict";

// Задачи с собеседований на понимание основ
//let x = 5;
//alert(x++);//Так выведется 5

//let x = 5;
//alert(++x);//Так выведется 6



[] + false - null + true
console.log([] + false - null + true) // NaN
//Одна особенность которую нужно четко запомнить когда мы работаем с пустым массивом в таких операциях он будет приведен к строковому типу данных тоесть к пустой строке ''


let y = 1;
let x = y = 2; //Это последовательное присваивание
alert(x); //2
console.log([] + 1 + 2) //12

alert("1"[0]);//1

console.log(2 && 1 && null && 0 && undefined);// null
//Оператор и && всегда запинается на лжи 1,2 всегда правда в логическом контексте null 0 undefined всегда ложб в логичесом контексте


console.log(!!(1 && 2)) === (1 && 2); //true
//Вспоминаем урок про динамическую типизацию два восклицательных знака превращает первое значение в булиновое 

//  3
alert(null || 2 && 3 || 4); // Когда мы с вами не уверены какой из операторов сработает первым нам необходимо смотреть всегда на таблицу приоритетв операторов
//или зпинается на правде
//когда у нас оба аргумента при логическом сравненнии с помощю и равны тогда у нас этот оператор будет возвращать последннее правдивое значение

// Если непонятно  в каом порядке будут ввыполнятся эти операторы  просто разбивайте задачу на отдельные кусочки по тому приоритету как они должны выполнятся

const a = [1, 2, 3]; //ящик n1  содержит 50зеленых яблок

const b = [1, 2, 3];// содержит тоже 50 зеленых яблок но этоуже другой ящик
//Потому что у нас есть две различные переменные два хранилища информации которые просто содержат одинаковые данные

// Нет они не равны
console.log(a == b);

alert(+'Infinity');// Выведется Infinity  
// но здесь будет тип данных число потому что у нас стоит унарный плюс

console.log("Ёжик" < "яблоко") //Если попадается такая задачка то нам нужно открывать табличку с unicodom и сравнивать
//Unicode это кодировка в кторой отоброжаются различные 

console.log(0 || "" || 2 || undefined || true || falsе);
// Ответ 2 потому что или || запинается на правде



